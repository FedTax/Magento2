# TaxCloud Magento2 Extension - Cursor Configuration

## Development Commands

### Run Tests
```bash
# Run all integration tests
make test

# Run tests locally (requires PHP)
make test-local

# Run individual test files
php Test/Integration/PostalCodeParserTest.php
php Test/Integration/RefundTest.php
php Test/Integration/ComprehensiveRefundTest.php
php Test/Integration/FailureCaseTest.php
php Test/Integration/FallbackToMagentoTest.php
php Test/Integration/AdobeCommerce248p1CompatibilityTest.php
```

### Run Linting
```bash
# Install PHP CodeSniffer (if not already installed)
composer global require squizlabs/php_codesniffer

# Run linting on PHP files
phpcs --standard=PSR2 --extensions=php Model/ Observer/ Logger/ Setup/ --ignore=Test/

# Auto-fix linting issues (where possible)
phpcbf --standard=PSR2 --extensions=php Model/ Observer/ Logger/ Setup/ --ignore=Test/
```

### Run Both Tests and Linting
```bash
# Run both tests and linting (recommended)
./scripts/lint-and-test.sh

# Or run individually
./scripts/lint-and-test.sh lint
./scripts/lint-and-test.sh test

# Or use make commands
make test
phpcs --standard=PSR2 --extensions=php Model/ Observer/ Logger/ Setup/ --ignore=Test/
```

## Code Style Guidelines

- Follow PSR-2 coding standards
- Use proper indentation (4 spaces)
- Add proper spacing around operators and keywords
- Place opening braces on the same line as function declarations
- Use camelCase for property names (no underscore prefixes)
- Keep lines under 120 characters when possible

## File Structure

- `Model/` - Core business logic
- `Observer/` - Event observers
- `Logger/` - Logging functionality
- `Setup/` - Database setup and patches
- `Test/Integration/` - Integration tests
- `Test/Unit/` - Unit tests (require PHPUnit)
- `.github/workflows/` - GitHub Actions workflows
- `.github/actions/` - Reusable GitHub Actions

## Testing

- All tests should be run before committing
- Integration tests can run without PHPUnit
- Unit tests require PHPUnit framework
- Use descriptive test method names
- Test both success and failure scenarios

## Deployment

- Manual deployment only via GitHub Actions
- Tests must pass before deployment
- Use SSH keys for secure deployment
- Deploy to sandbox environment for testing